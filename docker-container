#!/bin/sh
#####################################################################################################################
# Docker container script to start/stop and get container state                                                     #
#####################################################################################################################

#Create help function
printHelp() {
    echo "######################################################################"
    echo "# Usage: docker-container <container-name> <start/stop/status>       #"
    echo "#                                                                    #"
    echo "# Example: docker-container haproxy start                            #"
    echo "#                                                                    #"
    echo "# List of available containers: docker ps -a                         #"
    echo "######################################################################"
}

#Checks command line options
checkOptions() {
    CONT="$1"
    OPTI="$2"
     
    if [ $# -eq 0 ] || [ -z $CONT ] || [ -z $OPTI ]; then
            printHelp
            exit 3
    fi
}

#Function check options
checkOptions $@

#Set variables
START=start
STOP=stop
STATUS=status
STATE=`/usr/bin/docker ps |grep -w $CONT |wc -l` 

#Set functions for exist and start/stop/status
containerExist(){
    EXIST=`/usr/bin/docker ps -a|grep -w $CONT |wc -l`

    if [ $EXIST -eq 0 ]; then
    echo "Error: No such container: $CONT" 
    printHelp
    exit 3
    fi
}
startContainer(){
    containerExist
    if [ "$OPTI" == "$START" ] && [ $STATE -eq 0 ]; then
    /usr/bin/docker start $CONT > /dev/null 2>&1
        if [ $? -eq 0 ]; then
        STATE=`/usr/bin/docker ps |grep -w $CONT |wc -l`
        statusContainer 
        exit 0
        
        else
        echo "Can't start container $CONT"
        printHelp
        exit 3
        fi
        
    else 
    echo "Container $CONT is already running" 
    exit 3
    fi
}
stopContainer(){
    containerExist
    if [ "$OPTI" == $STOP ] && [ $STATE -eq 1 ]; then
    /usr/bin/docker stop $CONT > /dev/null 2>&1
        if [ $? -eq 0 ]; then
        STATE=`/usr/bin/docker ps |grep -w $CONT |wc -l`
        statusContainer 
        exit 0
        
        else
        echo "Can't stop container $CONT"
        printHelp
        exit 3
        fi

    else 
    echo "Container $CONT is already stopped" 
    exit 3
    fi
}
statusContainer(){
    containerExist
    if [ $STATE -eq 1 ]; then
    echo "Container $CONT is running"
    exit 0

    elif [ $STATE -eq 0 ]; then
    echo "Container $CONT is stopped"
    exit 3

    else 
    echo "Something is wrong with the container state or docker instance"
    exit 3
    fi
}

if [ "$OPTI" == "$START" ]; then
    startContainer

elif [ "$OPTI" == "$STOP" ]; then
    stopContainer

elif [ "$OPTI" == "$STATUS" ]; then
    statusContainer

else
    echo "Option -->$OPTI<-- not available"
    printHelp
    exit 3
fi
